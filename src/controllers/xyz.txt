let newBookingArray = [];

  if (json.marketplacebookings.length > 0) {
    // Create a promise for each booking process and use `Promise.all` to wait for all to complete
    const promises = json.marketplacebookings.map(async (booking) => {
      let newBookingObject = {
        MarketplaceId: booking.MarketplaceId,
        bookedDate: booking.bookedDate,
        partner: await PartnerAccount.findOne({_id: booking.partnerId}).select('_id partnerId companyName')
      };

      // Process coupino if it exists
      if (booking.coupino) {
        const coupinoPromises = booking.coupino.map(async (c) => {
          // Fetch each Coupino details and return the object
          return await Coupino.findOne({_id: c.coupinoId}).select('_id heading status redemptionCount coupinoComments coupinoViews coupinoLikes coupinoBookmarks');
        });

        // Wait for all Coupino promises to resolve before assigning to newBookingObject.coupino
        newBookingObject.coupino = await Promise.all(coupinoPromises);
      }

      return newBookingObject;
    });

    // Wait for all promises to resolve
    newBookingArray = await Promise.all(promises);
  }
